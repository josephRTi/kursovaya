{"remainingRequest":"/Users/josephrt/Documents/studying/web/k_job/node_modules/babel-loader/lib/index.js!/Users/josephrt/Documents/studying/web/k_job/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/josephrt/Documents/studying/web/k_job/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephrt/Documents/studying/web/k_job/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/josephrt/Documents/studying/web/k_job/src/components/TheTypes.vue?vue&type=template&id=19a3e2b8","dependencies":[{"path":"/Users/josephrt/Documents/studying/web/k_job/src/components/TheTypes.vue","mtime":1638115639827},{"path":"/Users/josephrt/Documents/studying/web/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Documents/studying/web/k_job/node_modules/babel-loader/lib/index.js","mtime":1631861076221},{"path":"/Users/josephrt/Documents/studying/web/k_job/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1631861076616},{"path":"/Users/josephrt/Documents/studying/web/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Documents/studying/web/k_job/node_modules/vue-loader-v16/dist/index.js","mtime":1631861076342}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIGNyZWF0ZVN0YXRpY1ZOb2RlIGFzIF9jcmVhdGVTdGF0aWNWTm9kZSwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrIH0gZnJvbSAidnVlIjsKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJjb250YWluZXIgd2l0aC1uYXYiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlU3RhdGljVk5vZGUoIjxkaXYgY2xhc3M9XCJjYXJkLWZsZXhcIj48ZGl2IGNsYXNzPVwiaXRlbTJcIj48aDM+S2V5LXZhbHVlIHN0b3JlcyAvINCl0YDQsNC90LjQu9C40YnQsCDRgtC40L/QsCDCq9C60LvRjtGHLdC30L3QsNGH0LXQvdC40LXCuzwvaDM+PHA+0J7RgtGB0YPRgtGB0YLQstC40LUg0YHRhdC10LzRiyDQsiDQsdCw0LfQsNGFINC00LDQvdC90YvRhSDCq9C60LvRjtGHLdC30L3QsNGH0LXQvdC40LXCuywg0L3QsNC/0YDQuNC80LXRgCwgUmlhaywg4oCUINGN0YLQviDQutCw0Log0YDQsNC3INGC0L4sINGH0YLQviDQstCw0Lwg0L3Rg9C20L3QviDQtNC70Y8g0YXRgNCw0L3QtdC90LjRjyDQtNCw0L3QvdGL0YUuINCa0LvRjtGHINC80L7QttC10YIg0LHRi9GC0Ywg0YHQuNC90YLQtdGC0LjRh9C10YHQutC40Lwg0LjQu9C4INCw0LLRgtC+0YHQs9C10L3QtdGA0LjRgNC+0LLQsNC90L3Ri9C8LCDQsCDQt9C90LDRh9C10L3QuNC1INC80L7QttC10YIg0LHRi9GC0Ywg0L/RgNC10LTRgdGC0LDQstC70LXQvdC+INGB0YLRgNC+0LrQvtC5LCBKU09OLCDQsdC70L7QsdC+0LwgKEJMT0IsIEJpbmFyeSBMYXJnZSBPYmplY3QsINCx0L7Qu9GM0YjQvtC5INC00LLQvtC40YfQvdGL0Lkg0L7QsdGK0LXQutGCKSDQuCDRgi7QtC4gPC9wPjwvZGl2PjxkaXYgY2xhc3M9XCJpdGVtMi1pbWdcIj48aW1nIGNsYXNzPVwicmVzcG9uc2l2ZSB1c2FnZS1pbWdcIiBzcmM9XCJodHRwczovL2R2LXdlYnNpdGUuczMuYW1hem9uYXdzLmNvbS91cGxvYWRzLzIwMTgvMDkva3ZkLXBpYzEucG5nXCIgYWx0PVwiXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImNhcmQtZmxleFwiPjxkaXYgY2xhc3M9XCJpdGVtMlwiPjxoMz7QlNC+0LrRg9C80LXQvdGC0L7QvtGA0LjQtdC90YLQuNGA0L7QstCw0L3QvdCw0Y8g0LHQsNC30LAg0LTQsNC90L3Ri9GFPC9oMz48cD7QlNCw0L3QvdGL0LUsINC/0YDQtdC00YHRgtCw0LLQu9C10L3QvdGL0LUg0L/QsNGA0LDQvNC4INC60LvRjtGHLdC30L3QsNGH0LXQvdC40LUsINGB0LbQuNC80LDRjtGC0YHRjyDQutCw0Log0YXRgNCw0L3QuNC70LjRidC1INC00L7QutGD0LzQtdC90YLQvtCyINGB0YXQvtC20LjQvCDRgSDRhdGA0LDQvdC40LvQuNGJ0LXQvCDCq9C60LvRjtGHLdC30L3QsNGH0LXQvdC40LXCuyDQvtCx0YDQsNC30L7QvCwg0YEg0YLQvtC5INC70LjRiNGMINGA0LDQt9C90LjRhtC10LksINGH0YLQviDRhdGA0LDQvdC40LzRi9C1INC30L3QsNGH0LXQvdC40Y8gKNC00L7QutGD0LzQtdC90YLRiykg0LjQvNC10Y7RgiDQvtC/0YDQtdC00LXQu9GR0L3QvdGD0Y4g0YHRgtGA0YPQutGC0YPRgNGDINC4INC60L7QtNC40YDQvtCy0LrRgyDQtNCw0L3QvdGL0YUuIFhNTCwgSlNPTiDQuCBCU09OIOKAlCDQvdC10LrQvtGC0L7RgNGL0LUg0LjQtyDRgdGC0LDQvdC00LDRgNGC0L3Ri9GFINGA0LDRgdC/0YDQvtGB0YLRgNCw0L3RkdC90L3Ri9GFINC60L7QtNC40YDQvtCy0L7Qui48L3A+PC9kaXY+PGRpdiBjbGFzcz1cIml0ZW0yLWltZ1wiPjxpbWcgc3JjPVwiaHR0cHM6Ly9zdHVkcmVmLmNvbS9odG0vaW1nLzE1LzY2NDQvMzUucG5nXCIgYWx0PVwiXCIgY2xhc3M9XCJyZXNwb25zaXZlIHVzYWdlLWltZ1wiPjwvZGl2PjwvZGl2PjxkaXYgY2xhc3M9XCJjYXJkLWZsZXhcIj48ZGl2IGNsYXNzPVwiaXRlbTJcIj48aDM+0JrQvtC70L7QvdC+0YfQvdCw0Y8g0LHQsNC30LAg0LTQsNC90L3Ri9GFPC9oMz48cD7QkiDQutC+0LvQvtC90L7Rh9C90YvRhSBOb1NRTCDQsdCw0LfQsNGFINC00LDQvdC90YvRhSDQtNCw0L3QvdGL0LUg0YXRgNCw0L3Rj9GC0YHRjyDQsiDRj9GH0LXQudC60LDRhSwg0YHQs9GA0YPQv9C/0LjRgNC+0LLQsNC90L3Ri9GFINCyINC60L7Qu9C+0L3QutC4LCDQsCDQvdC1INCyINGB0YLRgNC+0LrQuCDQtNCw0L3QvdGL0YUuINCa0L7Qu9C+0L3QutC4INC70L7Qs9C40YfQtdGB0LrQuCDQs9GA0YPQv9C/0LjRgNGD0Y7RgtGB0Y8g0LIg0LrQvtC70L7QvdC+0YfQvdGL0LUg0YHQtdC80LXQudGB0YLQstCwLiDQmtC+0LvQvtC90L7Rh9C90YvQtSDRgdC10LzQtdC50YHRgtCy0LAg0LzQvtCz0YPRgiDRgdC+0YHRgtC+0Y/RgtGMINC40Lcg0L/RgNCw0LrRgtC40YfQtdGB0LrQuCDQvdC10L7Qs9GA0LDQvdC40YfQtdC90L3QvtCz0L4g0LrQvtC70LjRh9C10YHRgtCy0LAg0LrQvtC70L7QvdC+0LosINC60L7RgtC+0YDRi9C1INC80L7Qs9GD0YIg0YHQvtC30LTQsNCy0LDRgtGM0YHRjyDQstC+INCy0YDQtdC80Y8g0YDQsNCx0L7RgtGLINC/0YDQvtCz0YDQsNC80LzRiyDQuNC70Lgg0LLQviDQstGA0LXQvNGPINC+0L/RgNC10LTQtdC70LXQvdC40Y8g0YHRhdC10LzRiy4g0KfRgtC10L3QuNC1INC4INC30LDQv9C40YHRjCDQv9GA0L7QuNGB0YXQvtC00LjRgiDRgSDQuNGB0L/QvtC70YzQt9C+0LLQsNC90LjQtdC8INC60L7Qu9C+0L3QvtC6LCDQsCDQvdC1INGB0YLRgNC+0LouPC9wPjwvZGl2PjxkaXYgY2xhc3M9XCJpdGVtMi1pbWdcIj48aW1nIHNyYz1cImh0dHBzOi8vMHgxLnR2L2ltZ19hdXRoLnBocC8zLzMwL9Ca0L7Qu9C+0L3QvtGH0L3Ri9C1X9CR0JRf0L3QsF/Qv9GA0LjQvNC10YDQtV9QYXJxdWV0XyUyONCb0LXQvtC90LjQtF/QkdC70L7RhdC40L0lMkNfU0VDT04tMjAxNyUyOSUyMS5qcGdcIiBhbHQ9XCJcIiBjbGFzcz1cInJlc3BvbnNpdmUgdXNhZ2UtaW1nXCI+PC9kaXY+PC9kaXY+PGRpdiBjbGFzcz1cImNhcmQtZmxleFwiPjxkaXYgY2xhc3M9XCJpdGVtMlwiPjxoMz7Qk9GA0LDRhNC+0LLQsNGPINCx0LDQt9CwINC00LDQvdC90YvRhTwvaDM+PHA+0JIg0LPRgNCw0YTQvtCy0L7QuSDQsdCw0LfQtSDQtNCw0L3QvdGL0YUg0LLRiyDQvdC1INC90LDQudC00ZHRgtC1INGB0YLRgNC+0LPQvtCz0L4g0YTQvtGA0LzQsNGC0LAgU1FMINC40LvQuCDQv9GA0LXQtNGB0YLQsNCy0LvQtdC90LjRjyDRgtCw0LHQu9C40YYg0Lgg0LrQvtC70L7QvdC+0LosINCy0LzQtdGB0YLQviDRjdGC0L7Qs9C+INC40YHQv9C+0LvRjNC30YPQtdGC0YHRjyDQs9C40LHQutC+0LUg0LPRgNCw0YTQuNGH0LXRgdC60L7QtSDQv9GA0LXQtNGB0YLQsNCy0LvQtdC90LjQtSwg0LrQvtGC0L7RgNC+0LUg0LjQtNC10LDQu9GM0L3QviDQv9C+0LTRhdC+0LTQuNGCINC00LvRjyDRgNC10YjQtdC90LjRjyDQv9GA0L7QsdC70LXQvCDQvNCw0YHRiNGC0LDQsdC40YDRg9C10LzQvtGB0YLQuC4g0JPRgNCw0YTQvtCy0YvQtSDRgdGC0YDRg9C60YLRg9GA0Ysg0LjRgdC/0L7Qu9GM0LfRg9GO0YLRgdGPINCy0LzQtdGB0YLQtSDRgSDRgNGR0LHRgNCw0LzQuCwg0YPQt9C70LDQvNC4INC4INGB0LLQvtC50YHRgtCy0LDQvNC4LCDRh9GC0L4g0L7QsdC10YHQv9C10YfQuNCy0LDQtdGCINCx0LXQt9C40L3QtNC10LrRgdC90YPRjiDRgdC80LXQttC90L7RgdGC0YwuINCf0YDQuCDQuNGB0L/QvtC70YzQt9C+0LLQsNC90LjQuCDQs9GA0LDRhNC+0LLQvtCz0L4g0YXRgNCw0L3QuNC70LjRidCwINC00LDQvdC90YvQtSDQvNC+0LPRg9GCINCx0YvRgtGMINC70LXQs9C60L4g0L/RgNC10L7QsdGA0LDQt9C+0LLQsNC90Ysg0LjQtyDQvtC00L3QvtC5INC80L7QtNC10LvQuCDQsiDQtNGA0YPQs9GD0Y4uPC9wPjwvZGl2PjxkaXYgY2xhc3M9XCJpdGVtMi1pbWdcIj48aW1nIHNyYz1cImh0dHBzOi8vdHByb2dlci5ydS9zMy91cGxvYWRzLzIwMTgvMTAvZ3JhZi0yLmpwZ1wiIGFsdD1cIlwiIGNsYXNzPVwicmVzcG9uc2l2ZSB1c2FnZS1pbWdcIj48L2Rpdj48L2Rpdj4iLCA0KTsKCnZhciBfaG9pc3RlZF82ID0gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoImRpdiIsIHsKICBjbGFzczogInNsaWRlci1kb3RzIgp9LCBbLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJzbGlkZXItZG90c19pdGVtIiwKICBvbmNsaWNrOiAiY3VycmVudFNsaWRlKDEpIgp9KSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJzbGlkZXItZG90c19pdGVtIiwKICBvbmNsaWNrOiAiY3VycmVudFNsaWRlKDIpIgp9KSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInNwYW4iLCB7CiAgY2xhc3M6ICJzbGlkZXItZG90c19pdGVtIiwKICBvbmNsaWNrOiAiY3VycmVudFNsaWRlKDMpIgp9KV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCnZhciBfaG9pc3RlZF83ID0gW19ob2lzdGVkXzIsIF9ob2lzdGVkXzZdOwpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIF9ob2lzdGVkXzcpOwp9"},{"version":3,"sources":["/Users/josephrt/Documents/studying/web/k_job/src/components/TheTypes.vue"],"names":[],"mappings":";;AACO,EAAA,KAAK,EAAC;;;;;8BAqDT,mBAAA,CAIM,KAJN,EAIM;AAJD,EAAA,KAAK,EAAC;AAIL,CAJN,EAAwB,C,aACtB,mBAAA,CAAgE,MAAhE,EAAgE;AAA1D,EAAA,KAAK,EAAC,kBAAoD;AAAjC,EAAA,OAAO,EAAC;AAAyB,CAAhE,CADsB,E,aAEtB,mBAAA,CAAgE,MAAhE,EAAgE;AAA1D,EAAA,KAAK,EAAC,kBAAoD;AAAjC,EAAA,OAAO,EAAC;AAAyB,CAAhE,CAFsB,E,aAGtB,mBAAA,CAAgE,MAAhE,EAAgE;AAA1D,EAAA,KAAK,EAAC,kBAAoD;AAAjC,EAAA,OAAO,EAAC;AAAyB,CAAhE,CAHsB,CAAxB,E;;AAAA,C;;kBApDA,U,EAoDA,U;;uBArDF,mBAAA,CA0DM,KA1DN,EAAA,UAAA,EA0DM,UA1DN,C","sourcesContent":["<template>\n  <div class=\"container with-nav\">\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Key-value stores / Хранилища типа «ключ-значение»</h3>\n        <p>Отсутствие схемы в базах данных «ключ-значение», например, Riak, — это как раз то, что вам\n          нужно для хранения данных. Ключ может быть синтетическим или автосгенерированным, а значение может быть\n          представлено строкой, JSON, блобом (BLOB, Binary Large Object, большой двоичный объект) и т.д.\n        </p>\n      </div>\n      <div class=\"item2-img\">\n        <img class=\"responsive usage-img\" src=\"https://dv-website.s3.amazonaws.com/uploads/2018/09/kvd-pic1.png\" alt=\"\">\n      </div>\n    </div>\n\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Документоориентированная база данных</h3>\n        <p>Данные, представленные парами ключ-значение, сжимаются как хранилище документов схожим с хранилищем\n          «ключ-значение» образом, с той лишь разницей, что хранимые значения (документы) имеют определённую структуру и\n          кодировку данных. XML, JSON и BSON — некоторые из стандартных распространённых кодировок.</p>\n      </div>\n\n      <div class=\"item2-img\">\n        <img src=\"https://studref.com/htm/img/15/6644/35.png\" alt=\"\" class=\"responsive usage-img\">\n      </div>\n    </div>\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Колоночная база данных</h3>\n        <p>В колоночных NoSQL базах данных данные хранятся в ячейках, сгруппированных в колонки, а не в строки данных.\n          Колонки логически группируются в колоночные семейства. Колоночные семейства могут состоять из практически\n          неограниченного количества колонок, которые могут создаваться во время работы программы или во время\n          определения схемы. Чтение и запись происходит с использованием колонок, а не строк.</p>\n      </div>\n      <div class=\"item2-img\">\n        <img\n            src=\"https://0x1.tv/img_auth.php/3/30/Колоночные_БД_на_примере_Parquet_%28Леонид_Блохин%2C_SECON-2017%29%21.jpg\"\n            alt=\"\" class=\"responsive usage-img\">\n      </div>\n    </div>\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Графовая база данных</h3>\n        <p>В графовой базе данных вы не найдёте строгого формата SQL или представления таблиц и колонок, вместо этого\n          используется гибкое графическое представление, которое идеально подходит для решения проблем масштабируемости.\n          Графовые структуры используются вместе с рёбрами, узлами и свойствами, что обеспечивает безиндексную\n          смежность. При использовании графового хранилища данные могут быть легко преобразованы из одной модели в\n          другую.</p>\n      </div>\n      <div class=\"item2-img\">\n        <img src=\"https://tproger.ru/s3/uploads/2018/10/graf-2.jpg\" alt=\"\" class=\"responsive usage-img\">\n      </div>\n    </div>\n    <div class=\"slider-dots\">\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(1)\"></span>\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(2)\"></span>\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(3)\"></span>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TheTypes\",\n  mounted() {\n\n    /* Индекс слайда по умолчанию */\n    var slideIndex = 1;\n    showSlides(slideIndex);\n\n    /* Функция увеличивает индекс на 1, показывает следующй слайд*/\n    function plusSlide() {\n      showSlides(slideIndex += 1);\n    }\n\n    /* Функция уменьшяет индекс на 1, показывает предыдущий слайд*/\n    function minusSlide() {\n      showSlides(slideIndex -= 1);\n    }\n\n    /* Устанавливает текущий слайд */\n    function currentSlide(n) {\n      showSlides(slideIndex = n);\n    }\n\n    /* Основная функция слайдера */\n    function showSlides(n) {\n      var i;\n      var slides = document.getElementsByClassName(\"card-flex\");\n      var dots = document.getElementsByClassName(\"slider-dots_item\");\n      if (n > slides.length) {\n        slideIndex = 1\n      }\n      if (n < 1) {\n        slideIndex = slides.length\n      }\n      for (i = 0; i < slides.length; i++) {\n        slides[i].style.display = \"none\";\n      }\n      for (i = 0; i < dots.length; i++) {\n        dots[i].className = dots[i].className.replace(\" active\", \"\");\n      }\n      slides[slideIndex - 1].style.display = \"block\";\n      dots[slideIndex - 1].className += \" active\";\n    }\n  }\n\n}\n\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}