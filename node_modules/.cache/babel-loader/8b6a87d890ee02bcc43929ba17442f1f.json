{"remainingRequest":"/Users/josephrt/Desktop/k_job/node_modules/babel-loader/lib/index.js!/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephrt/Desktop/k_job/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/josephrt/Desktop/k_job/src/components/TheTypes.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/josephrt/Desktop/k_job/src/components/TheTypes.vue","mtime":1638303920706},{"path":"/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Desktop/k_job/node_modules/babel-loader/lib/index.js","mtime":1631861076221},{"path":"/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Desktop/k_job/node_modules/vue-loader-v16/dist/index.js","mtime":1631861076342}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcucmVwbGFjZS5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVGhlVHlwZXMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBzbGlkZUluZGV4OiAxLAogICAgICBzbGlkZXM6IFtdLAogICAgICBkb3RzOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLnNsaWRlcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImNhcmQtZmxleCIpOwogICAgdGhpcy5kb3RzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgic2xpZGVyLWRvdHNfaXRlbSIpOwogICAgdGhpcy5zaG93U2xpZGVzKHRoaXMuc2xpZGVJbmRleCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBwbHVzU2xpZGU6IGZ1bmN0aW9uIHBsdXNTbGlkZSgpIHsKICAgICAgdGhpcy5zaG93U2xpZGVzKHRoaXMuc2xpZGVJbmRleCArPSAxKTsKICAgIH0sCgogICAgLyog0KTRg9C90LrRhtC40Y8g0YPQvNC10L3RjNGI0Y/QtdGCINC40L3QtNC10LrRgSDQvdCwIDEsINC/0L7QutCw0LfRi9Cy0LDQtdGCINC/0YDQtdC00YvQtNGD0YnQuNC5INGB0LvQsNC50LQqLwogICAgbWludXNTbGlkZTogZnVuY3Rpb24gbWludXNTbGlkZSgpIHsKICAgICAgdGhpcy5zaG93U2xpZGVzKHRoaXMuc2xpZGVJbmRleCAtPSAxKTsKICAgIH0sCgogICAgLyog0KPRgdGC0LDQvdCw0LLQu9C40LLQsNC10YIg0YLQtdC60YPRidC40Lkg0YHQu9Cw0LnQtCAqLwogICAgY3VycmVudFNsaWRlOiBmdW5jdGlvbiBjdXJyZW50U2xpZGUobikgewogICAgICB0aGlzLnNob3dTbGlkZXModGhpcy5zbGlkZUluZGV4ID0gbik7CiAgICB9LAoKICAgIC8qINCe0YHQvdC+0LLQvdCw0Y8g0YTRg9C90LrRhtC40Y8g0YHQu9Cw0LnQtNC10YDQsCAqLwogICAgc2hvd1NsaWRlczogZnVuY3Rpb24gc2hvd1NsaWRlcyhuKSB7CiAgICAgIHZhciBpOyAvLyB2YXIgc2xpZGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgiaXRlbSIpOwogICAgICAvLyB2YXIgZG90cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInNsaWRlci1kb3RzX2l0ZW0iKTsKCiAgICAgIGlmIChuID4gdGhpcy5zbGlkZXMubGVuZ3RoKSB7CiAgICAgICAgdGhpcy5zbGlkZUluZGV4ID0gMTsKICAgICAgfQoKICAgICAgaWYgKG4gPCAxKSB7CiAgICAgICAgdGhpcy5zbGlkZUluZGV4ID0gdGhpcy5zbGlkZXMubGVuZ3RoOwogICAgICB9CgogICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5zbGlkZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICB0aGlzLnNsaWRlc1tpXS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICB9CgogICAgICBmb3IgKGkgPSAwOyBpIDwgdGhpcy5kb3RzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgdGhpcy5kb3RzW2ldLmNsYXNzTmFtZSA9IHRoaXMuZG90c1tpXS5jbGFzc05hbWUucmVwbGFjZSgiIGFjdGl2ZSIsICIiKTsKICAgICAgfQoKICAgICAgdGhpcy5zbGlkZXNbdGhpcy5zbGlkZUluZGV4IC0gMV0uc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKICAgICAgdGhpcy5kb3RzW3RoaXMuc2xpZGVJbmRleCAtIDFdLmNsYXNzTmFtZSArPSAiIGFjdGl2ZSI7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/Users/josephrt/Desktop/k_job/src/components/TheTypes.vue"],"names":[],"mappings":";;AA0EA,eAAe;AACb,EAAA,IAAI,EAAE,UADO;AAEb,EAAA,IAFa,kBAEN;AACL,WAAO;AACL,MAAA,UAAU,EAAE,CADP;AAEL,MAAA,MAAM,EAAE,EAFH;AAGL,MAAA,IAAI,EAAE;AAHD,KAAP;AAKD,GARY;AASb,EAAA,OATa,qBASH;AACR,SAAK,MAAL,GAAc,QAAQ,CAAC,sBAAT,CAAgC,WAAhC,CAAd;AACA,SAAK,IAAL,GAAY,QAAQ,CAAC,sBAAT,CAAgC,kBAAhC,CAAZ;AACA,SAAK,UAAL,CAAgB,KAAK,UAArB;AACD,GAbY;AAcb,EAAA,OAAO,EAAE;AACP,IAAA,SADO,uBACK;AACV,WAAK,UAAL,CAAgB,KAAK,UAAL,IAAmB,CAAnC;AACD,KAHM;;AAKP;AACA,IAAA,UANO,wBAMM;AACX,WAAK,UAAL,CAAgB,KAAK,UAAL,IAAmB,CAAnC;AACD,KARM;;AAUP;AACA,IAAA,YAXO,wBAWM,CAXN,EAWS;AACd,WAAK,UAAL,CAAgB,KAAK,UAAL,GAAkB,CAAlC;AACD,KAbM;;AAeP;AACA,IAAA,UAhBO,sBAgBI,CAhBJ,EAgBO;AACZ,UAAI,CAAJ,CADY,CAEZ;AACA;;AACA,UAAI,CAAA,GAAI,KAAK,MAAL,CAAY,MAApB,EAA4B;AAC1B,aAAK,UAAL,GAAkB,CAAlB;AACF;;AACA,UAAI,CAAA,GAAI,CAAR,EAAW;AACT,aAAK,UAAL,GAAkB,KAAK,MAAL,CAAY,MAA9B;AACF;;AACA,WAAK,CAAA,GAAI,CAAT,EAAY,CAAA,GAAI,KAAK,MAAL,CAAY,MAA5B,EAAoC,CAAC,EAArC,EAAyC;AACvC,aAAK,MAAL,CAAY,CAAZ,EAAe,KAAf,CAAqB,OAArB,GAA+B,MAA/B;AACF;;AACA,WAAK,CAAA,GAAI,CAAT,EAAY,CAAA,GAAI,KAAK,IAAL,CAAU,MAA1B,EAAkC,CAAC,EAAnC,EAAuC;AACrC,aAAK,IAAL,CAAU,CAAV,EAAa,SAAb,GAAyB,KAAK,IAAL,CAAU,CAAV,EAAa,SAAb,CAAuB,OAAvB,CAA+B,SAA/B,EAA0C,EAA1C,CAAzB;AACF;;AACA,WAAK,MAAL,CAAY,KAAK,UAAL,GAAkB,CAA9B,EAAiC,KAAjC,CAAuC,OAAvC,GAAiD,MAAjD;AACA,WAAK,IAAL,CAAU,KAAK,UAAL,GAAkB,CAA5B,EAA+B,SAA/B,IAA4C,SAA5C;AACF;AAlCO;AAdI,CAAf","sourcesContent":["<template>\n  <div class=\"slider\">\n    <div class=\"container with-nav\">\n      <div class=\"card-flex\">\n        <div class=\"item2\">\n          <h3>Key-value stores / Хранилища типа «ключ-значение»</h3>\n          <p>Отсутствие схемы в базах данных «ключ-значение», например, Riak, — это как раз то, что вам\n            нужно для хранения данных. Ключ может быть синтетическим или автосгенерированным, а значение может быть\n            представлено строкой, JSON, блобом (BLOB, Binary Large Object, большой двоичный объект) и т.д.\n          </p>\n        </div>\n        <div class=\"item2-img\">\n          <img class=\"responsive usage-img\" src=\"https://dv-website.s3.amazonaws.com/uploads/2018/09/kvd-pic1.png\"\n               alt=\"\">\n        </div>\n      </div>\n\n      <div class=\"card-flex\">\n        <div class=\"item2\">\n          <h3>Документоориентированная база данных</h3>\n          <p>Данные, представленные парами ключ-значение, сжимаются как хранилище документов схожим с хранилищем\n            «ключ-значение» образом, с той лишь разницей, что хранимые значения (документы) имеют определённую структуру\n            и\n            кодировку данных. XML, JSON и BSON — некоторые из стандартных распространённых кодировок.</p>\n        </div>\n\n        <div class=\"item2-img\">\n          <img src=\"https://studref.com/htm/img/15/6644/35.png\" alt=\"\" class=\"responsive usage-img\">\n        </div>\n      </div>\n      <div class=\"card-flex\">\n        <div class=\"item2\">\n          <h3>Колоночная база данных</h3>\n          <p>В колоночных NoSQL базах данных данные хранятся в ячейках, сгруппированных в колонки, а не в строки данных.\n            Колонки логически группируются в колоночные семейства. Колоночные семейства могут состоять из практически\n            неограниченного количества колонок, которые могут создаваться во время работы программы или во время\n            определения схемы. Чтение и запись происходит с использованием колонок, а не строк.</p>\n        </div>\n        <div class=\"item2-img\">\n          <img\n              src=\"https://0x1.tv/img_auth.php/3/30/Колоночные_БД_на_примере_Parquet_%28Леонид_Блохин%2C_SECON-2017%29%21.jpg\"\n              alt=\"\" class=\"responsive usage-img\">\n        </div>\n      </div>\n      <div class=\"card-flex\">\n        <div class=\"item2\">\n          <h3>Графовая база данных</h3>\n          <p>В графовой базе данных вы не найдёте строгого формата SQL или представления таблиц и колонок, вместо этого\n            используется гибкое графическое представление, которое идеально подходит для решения проблем\n            масштабируемости.\n            Графовые структуры используются вместе с рёбрами, узлами и свойствами, что обеспечивает безиндексную\n            смежность. При использовании графового хранилища данные могут быть легко преобразованы из одной модели в\n            другую.</p>\n        </div>\n        <div class=\"item2-img\">\n          <img src=\"https://tproger.ru/s3/uploads/2018/10/graf-2.jpg\" alt=\"\" class=\"responsive usage-img\">\n        </div>\n      </div>\n    </div>\n    <a class=\"prev\" @click=\"minusSlide\">&#10094;</a>\n    <a class=\"next\" @click=\"plusSlide\">&#10095;</a>\n  </div>\n  <div class=\"container card\">\n    <div class=\"slider-dots\">\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(1)\"></span>\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(2)\"></span>\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(3)\"></span>\n      <span class=\"slider-dots_item\" onclick=\"currentSlide(4)\"></span>\n    </div>\n  </div>\n</template>\n\n<script>\n\nexport default {\n  name: \"TheTypes\",\n  data() {\n    return {\n      slideIndex: 1,\n      slides: [],\n      dots: []\n    }\n  },\n  mounted() {\n    this.slides = document.getElementsByClassName(\"card-flex\");\n    this.dots = document.getElementsByClassName(\"slider-dots_item\")\n    this.showSlides(this.slideIndex);\n  },\n  methods: {\n    plusSlide() {\n      this.showSlides(this.slideIndex += 1);\n    },\n\n    /* Функция уменьшяет индекс на 1, показывает предыдущий слайд*/\n    minusSlide() {\n      this.showSlides(this.slideIndex -= 1);\n    },\n\n    /* Устанавливает текущий слайд */\n    currentSlide(n) {\n      this.showSlides(this.slideIndex = n);\n    },\n\n    /* Основная функция слайдера */\n    showSlides(n) {\n      var i;\n      // var slides = document.getElementsByClassName(\"item\");\n      // var dots = document.getElementsByClassName(\"slider-dots_item\");\n      if (n > this.slides.length) {\n        this.slideIndex = 1\n      }\n      if (n < 1) {\n        this.slideIndex = this.slides.length\n      }\n      for (i = 0; i < this.slides.length; i++) {\n        this.slides[i].style.display = \"none\";\n      }\n      for (i = 0; i < this.dots.length; i++) {\n        this.dots[i].className = this.dots[i].className.replace(\" active\", \"\");\n      }\n      this.slides[this.slideIndex - 1].style.display = \"flex\";\n      this.dots[this.slideIndex - 1].className += \" active\";\n    }\n\n  }\n}\n\n</script>\n\n<style scoped>\n/* Собственно сам слайдер */\n.slider {\n  max-width: 100%;\n  position: relative;\n  margin: auto;\n  margin-bottom: 15px;\n}\n\n/* Картинка мастабируется по отношению к родительскому элементу */\n.slider .item img {\n  object-fit: cover;\n  width: 100%;\n  height: 300px;\n  border: none !important;\n  box-shadow: none !important;\n}\n\n/* Кнопки вперед и назад */\n.slider .prev, .slider .next {\n  cursor: pointer;\n  position: absolute;\n  top: 0;\n  top: 50%;\n  width: 25px;\n  margin-top: -22px;\n  padding: 16px;\n  color: white;\n  font-weight: bold;\n  font-size: 18px;\n  transition: 0.6s ease;\n  border-radius: 0 3px 3px 0;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n.slider .next {\n  right: 0;\n  border-radius: 3px 0 0 3px;\n  background-color: rgba(0, 0, 0, 0.4);\n}\n\n/* При наведении на кнопки добавляем фон кнопок */\n.slider .prev:hover,\n.slider .next:hover {\n  background-color: rgba(0, 0, 0, 0.8);\n}\n\n/* Заголовок слайда */\n.slideText {\n  position: absolute;\n  color: #fff;\n  font-size: 35px;\n  /* Выравнивание текста по горизонтали и по вертикали*/\n  left: 50%;\n  top: 50%;\n  transform: translate(-50%, -50%);\n  /* Тень*/\n  text-shadow: 1px 1px 1px #000, 0 0 1em #000;\n}\n\n/* Кружочки */\n.slider-dots {\n  text-align: center;\n}\n\n.slider-dots_item {\n  cursor: pointer;\n  height: 12px;\n  width: 12px;\n  margin: 0 2px;\n  background-color: #ddd;\n  border-radius: 50%;\n  display: inline-block;\n  transition: background-color 0.6s ease;\n}\n\n.active,\n.slider-dots_item:hover {\n  background-color: #aaa;\n}\n\n/* Анимация слайдов */\n.slider .item {\n  -webkit-animation-name: fade;\n  -webkit-animation-duration: 1.5s;\n  animation-name: fade;\n  animation-duration: 1.5s;\n}\n\n@-webkit-keyframes fade {\n  from {\n    opacity: .4\n  }\n  to {\n    opacity: 1\n  }\n}\n\n@keyframes fade {\n  from {\n    opacity: .4\n  }\n  to {\n    opacity: 1\n  }\n}\n\n</style>\n"],"sourceRoot":""}]}