{"remainingRequest":"/Users/josephrt/Desktop/k_job/node_modules/babel-loader/lib/index.js!/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/josephrt/Desktop/k_job/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/josephrt/Desktop/k_job/src/components/TheUsage.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/josephrt/Desktop/k_job/src/components/TheUsage.vue","mtime":1638303920707},{"path":"/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Desktop/k_job/node_modules/babel-loader/lib/index.js","mtime":1631861076221},{"path":"/Users/josephrt/Desktop/k_job/node_modules/cache-loader/dist/cjs.js","mtime":1631861075818},{"path":"/Users/josephrt/Desktop/k_job/node_modules/vue-loader-v16/dist/index.js","mtime":1631861076342}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJUaGVVc2FnZSIKfTs="},{"version":3,"sources":["/Users/josephrt/Desktop/k_job/src/components/TheUsage.vue"],"names":[],"mappings":"AA+CA,eAAe;AACb,EAAA,IAAI,EAAE;AADO,CAAf","sourcesContent":["<template>\n  <div class=\"container with-nav\">\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Использование NoSQL</h3>\n        <hr>\n        <p>NoSQL хранилища данных отвечают за те ключевые требования хранения данных, которые не могут быть удовлетворены\n          реляционными БД.</p>\n      </div>\n      <div class=\"item2-img\">\n        <img class=\"responsive usage-img\" src=\"https://www.cloudsavvyit.com/p/uploads/2021/07/f5932bc2.jpg?width=1198&trim=1,1&bg-color=000&pad=1,1\" width=\"400\" height=\"225\" alt=\"mongo\">\n      </div>\n    </div>\n    <div class=\"card-flex\">\n      <div class=\"item2\">\n        <h3>Кеширование</h3>\n        <hr>\n        <p>\n          Кеширование результатов является общей задачей повышения отзывчивости приложения. К примеру, web-сайт отдает одни\n          и те же ответы сотням и тысячам пользователей. Вместо того, чтобы утомительно пересчитывать в реляционной БД одно\n          и то же, стоит вручную настроить кеширование. Некоторые NoSQL хранилища предоставляют похожие решения, но\n          разработчику не нужно поддерживать пользовательский кеш.\n        </p>\n      </div>\n\n      <div class=\"item2-img\">\n\n        <br>\n        <img class=\"responsive usage-img\" src=\"https://marvel-b1-cdn.bc0a.com/f00000000173332/www.openlogic.com/sites/openlogic/files/image/2021-06/image-blog-openlogic-what-is-mongodb.png\" alt=\"\" width=\"450\">\n      </div>\n\n    </div>\n\n    <div class=\"card\">\n      <h3>Хранилища ключ-значение</h3>\n      <hr>\n      <p>\n        Некоторые NoSQL БД сохраняют пары ключ-значение для быстрого поиска, к примеру, в случае доступа вопрос/ответ.\n        Реляционные БД более ориентированы на сохранение сложных структур данных и различных взаимосвязей между типами\n        данных. Эта технология излишне усложняет, когда разработчик хочет реализовать способ быстрого сохранения и доступа\n        к Q&A данным.\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"TheUsage\"\n}\n</script>\n\n<style scoped>\n\n</style>\n"],"sourceRoot":""}]}